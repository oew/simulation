/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral() 
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    implementation 'com.google.guava:guava:28.0-jre'
    
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    
// https://mvnrepository.com/artifact/com.hazelcast/hazelcast
	compile group: 'com.hazelcast', name: 'hazelcast', version: '4.0.1'
//	compile group: 'com.hazelcast', name: 'hazelcast-client', version: '3.12.7'
//	compile group: 'com.hazelcast', name: 'hazelcast-client', version: '4.0.1'
	
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
  	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
  	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
  	
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

jar {
    manifest {
        attributes "Main-Class": "com.tmm.simulation.MapSimulation"
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task customJar(type: Jar) {
    manifest {
        attributes "Main-Class": "com.tmm.simulation.MapSimulation"
    }
    baseName = 'simulation-full'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
